name: Build and push Image

on:
    workflow_call:
      inputs:
        image_name:
          description: The image name (without organization prefix).
          required: true
          type: string
        platforms_architectures:
          description: Comma separated list of Docker architectures to use with BuildKit.
          required: false
          default: "linux/amd64, linux/arm64"
          type: string

jobs:
  build:
    name: Build and publish image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner	}}/${{ inputs.image_name }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Get app version
        id: get_app_version
        shell: bash
        run: |
          if [[ "$IS_PRODUCTION" == "true" ]]; then
            version=$(echo ${{ github.ref_name }} | sed -e 's/^v//')
          else
            version="0.0.1-${{ github.sha }}"
          fi
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
        env:
          IS_PRODUCTION: ${{ (github.event_name == 'release' || github.event_name == 'workflow_dispatch') && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: ${{ inputs.platforms_architectures }}
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_VERSION=${{ steps.get_app_version.outputs.version }}