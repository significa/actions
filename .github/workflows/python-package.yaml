name: Python package

on:
  workflow_call:
    inputs:
      python_version:
        description: Python version to use.
        type: string
        required: false
        default: "3.11"

      lint_command:
        description: Lint command.
        type: string
        required: false
        default: |
          pip install -r requirements.dev.txt && \
          pycodestyle . && \
          flake8 . && \
          isort . --check

      publish_to_pip:
        description: True to publish to PIP.
        type: boolean
        default: true
        required: false

      publish_preview_releases_branch_name:
        description: |
          The branch name which should be used to publish dev release candidates.
          Defaults to 'main' - means that all pushes to the main branches are published as dev 
          release, tagged with `0.0.1-dev-GH_ACTIONS_RUN_BUMBER` (ex: `0.0.1-dev-42`)
          Set to `null` to prevent publishing dev preview releases.
        type: string
        default: main
        required: false

    secrets:
      TWINE_USERNAME:
        required: false
      TWINE_PASSWORD:
        required: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'

      - name: Lint
        run: ${{ inputs.lint_command }}

  publish:
    name: Publish
    if: inputs.publish_to_pip && ( github.event_name == 'release' || github.event_name == 'workflow_dispatch' || ( github.event_name == 'push' && inputs.publish_preview_releases_branch_name ))
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-python-package-publish
      cancel-in-progress: false
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'

      - name: Get app version
        id: get_app_version
        shell: bash
        run: |
          if [[ "$IS_PRODUCTION" == "true" ]]; then
            version=$(echo "${{ github.ref_name }}" | sed -e 's/^v//')
          else
            version="0.0.1-dev-${{ github.run_number }}"
          fi
          echo "version=$version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
        env:
          IS_PRODUCTION: ${{ (github.event_name == 'release' || github.event_name == 'workflow_dispatch') && github.ref_type == 'tag' && startsWith(github.ref_name, 'v')}}
  
      - name: Install dependencies
        env:
          VERSION: ${{ steps.get_app_version.outputs.version }}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME || '__token__' }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          VERSION: ${{ steps.get_app_version.outputs.version }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
