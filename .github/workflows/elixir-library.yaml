name: Elixir library

on:
  workflow_call:
    inputs:
      publish-to-hex:
        description: True to publish package to Hex package manager.
        required: false
        default: true
        type: boolean
      replace-mix-version:
        description: True to replace the version placeholder (`0.0.1-development`) in `mix.exs`
        required: false
        default: true
        type: boolean
      mix-compile-opts:
        description: mix compile options
        required: false
        default: --warning-as-errors
        type: string
      latest-elixir-version:
        required: false
        default: "1.18"
        type: string
      latest-otp-version:
        required: false
        default: "25.x"
        type: string
      latest-otp-os-version:
        required: false
        default: "ubuntu-24.04"
        type: string
    secrets:
      HEX_API_KEY:
        required: true

jobs:
  test:
    name: Test
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        # Source of truth for the compatibility matrix:
        #   https://hexdocs.pm/elixir/compatibility-and-deprecations.html
        #   https://builds.hex.pm/builds/otp/ubuntu-XX.XX/builds.txt
        include:
         # Elixir 1.18 combinations
          - elixir-version: "1.18"
            otp-version: "25.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.18"
            otp-version: "26.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.18"
            otp-version: "27.x"
            os: "ubuntu-24.04"

          # Elixir 1.17 combinations
          - elixir-version: "1.17"
            otp-version: "25.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.17"
            otp-version: "26.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.17"
            otp-version: "27.x"
            os: "ubuntu-24.04"

          # Elixir 1.16 combinations
          - elixir-version: "1.16"
            otp-version: "24.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.16"
            otp-version: "25.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.16"
            otp-version: "26.x"
            os: "ubuntu-24.04"

          # Elixir 1.15 combinations
          - elixir-version: "1.15"
            otp-version: "24.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.15"
            otp-version: "25.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.15"
            otp-version: "26.x"
            os: "ubuntu-24.04"

          # Elixir 1.14 combinations
          - elixir-version: "1.14"
            otp-version: "23.x"
            os: "ubuntu-20.04"
          - elixir-version: "1.14"
            otp-version: "24.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.14"
            otp-version: "25.x"
            os: "ubuntu-24.04"
          - elixir-version: "1.14"
            otp-version: "26.x"
            os: "ubuntu-24.04"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1.18
        with:
          elixir-version: ${{ matrix.elixir-version }}
          otp-version: ${{ matrix.otp-version }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - run: mix deps.get

      - run: mix test

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1.18
        with:
          elixir-version: ${{ inputs.latest-elixir-version }}
          otp-version: ${{ inputs.latest-otp-version }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - run: mix deps.get

      - run: mix format --check-formatted

  build:
    name: Test build
    runs-on: ${{ inputs.latest-otp-os-version }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1.18
        with:
          elixir-version: ${{ inputs.latest-elixir-version }}
          otp-version: ${{ inputs.latest-otp-version }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - run: mix deps.get

      - run: mix compile ${{ inputs.mix-compile-opts }}
        env:
          MIX_ENV: prod

      - run: mix hex.build

  publish:
    name: Publish to Hex
    timeout-minutes: 5
    runs-on: ${{ inputs.latest-otp-os-version }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    needs:
      - test
      - lint
      - build

    if: |
      inputs.publish-to-hex
      && (
        github.event_name == 'release'
        && !github.event.release.isDraft
        && startsWith(github.event.release.name, 'v')
        && startsWith(github.event.release.tag_name, 'v')
      ) || (
        github.event_name == 'push'
        && github.ref_name == 'main'
      )

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1.18
        with:
          elixir-version: ${{ inputs.latest-elixir-version }}
          otp-version: ${{ inputs.latest-otp-version }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - run: mix deps.get

      - name: Tagging version in mix.exs for production release
        if: inputs.replace-mix-version && github.event_name == 'release'
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed -e 's/^v//')
          echo "Setting version in mix.exs to ${VERSION}"
          sed -i "s/0.0.1-development/${VERSION}/g" mix.exs

      - name: Tagging version in mix.exs for main release candidate (main branch)
        if: inputs.replace-mix-version && github.ref_name == 'main'
        run: |
          VERSION="0.0.1-main-${{ github.sha }}"
          echo "Setting version in mix.exs to ${VERSION}"
          sed -i "s/0.0.1-development/${VERSION}/g" mix.exs

      - name: Publish
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: mix hex.publish --yes
