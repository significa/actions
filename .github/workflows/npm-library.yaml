name: NPM Library

on:
  workflow_call:
    inputs:
      node_versions:
        description: JSON array (as string) of Node versions to test.
        type: string
        required: false
        default: '[16, 18, 19]'

      install_command:
        description: Install command.
        type: string
        required: false
        default: npm ci --prefer-offline --no-audit --no-fund

      lint_command:
        description: Lint command.
        type: string
        required: false
        default: npm run lint
      
      build_command:
        description: Build command.
        type: string
        required: false
        default: npm run build
      
      test_command:
        description: Test command.
        type: string
        required: false
        default: npm run test

      npm_scope:
        description: "NPM scope (containing the '@' symbol, ex: @example)."
        type: string
        required: false
        default: "@significa"

      install_registry_url:
        description: >-
          The NPM registry URL to install scoped packages from.
          Scope specified in the input `npm_scope`.
        required: false
        default: "https://registry.npmjs.org/"
        type: string
      
      publish_to_github_registry:
        description: True to publish the GitHub NPM registry.
        required: false
        default: true
        type: boolean

      publish_to_npm_registry:
        description: True to publish the NPM (npmjs.com) registry.
        required: false
        default: false
        type: boolean

    secrets:
      NPM_TOKEN:
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Check checks
        shell: bash
        run: |
          [ -f "./.nvmrc" ] || (echo "Required .nvmrc file does not exist" >&2 && echo 1)

      - name: Custom checks when publishing
        if: inputs.publish_to_npm_registry || inputs.publish_to_github_registry
        shell: bash
        run: |
          jq -e '.publishConfig | has("${{ inputs.npm_scope }}:registry") | not' package.json \
          || ( \
            echo "ERROR: 'publishConfig.${{ inputs.npm_scope }}:registry' should not be defined in 'package.json'" >&2 \
            && exit 1 \
          )

      - name: Custom checks when publishing to NPM
        if: inputs.publish_to_npm_registry
        shell: bash
        run: |
          jq -e '.private != true' package.json \
          || ( \
            echo "ERROR: 'package.json' has 'private' set to true, publishing to NPM will fail." >&2 \
            && exit 1 \
          )

          jq -e '.publishConfig.access == "public"' package.json \
          || ( \
            echo "ERROR: '.publishConfig.access' in 'package.json' must be set to 'public', otherwise publishing to NPM will fail." >&2 \
            && exit 1 \
          )

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
          scope: ${{ inputs.npm_scope }}
          registry-url: ${{ inputs.install_registry_url }}

      - name: Install dependencies
        run: ${{ inputs.install_command }}

      - name: Lint
        run: ${{ inputs.lint_command }}

  test:
    name: Test and build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        node_version: ${{ fromJSON(inputs.node_versions) }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm
          scope: ${{ inputs.npm_scope }}
          registry-url: ${{ inputs.install_registry_url }}

      - name: Install dependencies
        run: ${{ inputs.install_command }}

      - name: Test
        if: inputs.test_command
        run: ${{ inputs.test_command }}

      - name: Build
        if: inputs.build_command
        run: ${{ inputs.build_command }}

  publish:
    name: Publish library
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - lint
      - test
    if: |
      (inputs.publish_to_github_registry || inputs.publish_to_npm_registry)
      && github.event_name == 'release'
      && startsWith(github.event.release.name, 'v')
      && startsWith(github.event.release.tag_name, 'v')
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
          scope: ${{ inputs.npm_scope }}
          registry-url: ${{ inputs.install_registry_url }}

      - name: Install dependencies
        run: ${{ inputs.install_command }}

      - name: Set package.json version
        run: npm version --no-git-tag-version "${{ github.ref_name }}"

      - name: Build
        run: ${{ inputs.build_command }}

      - name: Publish to GitHub registry
        if: inputs.publish_to_github_registry
        run: |
          cat > ./.npmrc <<EOF
          //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
          ${{ inputs.npm_scope }}:registry=https://npm.pkg.github.com/
          EOF

          npm publish

      - name: Publish to the NPM registry
        if: inputs.publish_to_npm_registry
        run: |
          cat > ./.npmrc <<EOF
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          ${{ inputs.npm_scope }}:registry=https://registry.npmjs.org/
          EOF

          npm publish
